apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'
 apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

group = "com.github.zuinnote"
archivesBaseName = "hadoopoffice-fileformat"
version = "1.1.1"

jar {
    manifest {
        attributes 'Implementation-Title': 'ZuInnoTe - Hadoop Office Analytics Library - FileFormat', 'Implementation-Version': version
    }
    baseName = 'hadoopoffice-fileformat'
}



repositories {
    mavenCentral()
    mavenLocal()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}

// Integrate JaCoCo for jUnit5
project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceDirectories = files("./src/main")
                classDirectories = files("$buildDir/classes/main")
                executionData junitPlatformTestTask
            })
}

configurations {
	provided
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
  }
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

javadoc.classpath += configurations.provided


task hadoopOfficeJavaDocs(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives hadoopOfficeJavaDocs, sourcesJar
}

test {
    testLogging.showStandardStreams = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
		groupId 'com.github.zuinnote'
            artifactId 'hadoopoffice-fileformat'
            version '1.1.1'
            from components.java
        }
    }
}


dependencies {

   // Apache POI (for Excel parsing)
   compile("org.apache.poi:poi:3.17")
   compile("org.apache.poi:poi-ooxml:3.17")
   // for signing and verification of signatures
    provided("org.bouncycastle:bcprov-ext-jdk15on:1.58")
    provided("org.bouncycastle:bcpkix-jdk15on:1.58")
    provided("org.apache.santuario:xmlsec:2.1.0")
   // hadoop libraries
   provided("org.apache.hadoop:hadoop-common:2.7.0")
   provided("org.apache.hadoop:hadoop-mapreduce-client-common:2.7.0")
   // log4j2
   provided("org.apache.logging.log4j:log4j-api:2.8.1")
   // test
   testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.1'
   
   testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.1'
}
